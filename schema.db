-- There are at least 4 different migration systems for Clojure,
-- and they all seem to have different tradeoffs.  I'll probably
-- pick one, someday, and fix up its limitations.  For now,
-- I just need a really simple database, so here's a SQL script
-- to throw at Postgres.

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    login VARCHAR NOT NULL,
    email VARCHAR NOT NULL,
    name VARCHAR NOT NULL,
    password VARCHAR NOT NULL,
    salt VARCHAR NOT NULL
);

CREATE TABLE blogs (
    id SERIAL PRIMARY KEY,
    uuid UUID NOT NULL,
    title VARCHAR NOT NULL,
    subtitle VARCHAR,
    user_id INTEGER REFERENCES users (id)
);

CREATE TABLE posts (
    id SERIAL PRIMARY KEY,
    uuid UUID NOT NULL,
    blog_id INTEGER REFERENCES blogs (id),
    title VARCHAR NOT NULL,
    content TEXT NOT NULL,
    created TIMESTAMP NOT NULL,
    updated TIMESTAMP NOT NULL,
    published BOOLEAN NOT NULL
);

-- FUTURE: can i unify this with 'posts'?  they seem like they're both trying to solve the same problem, just with a link in a different place in the HTML.
CREATE TABLE docs (
    id SERIAL PRIMARY KEY,
    blog_id INTEGER REFERENCES blogs (id),
    name VARCHAR NOT NULL,
    slug VARCHAR NOT NULL,
    content TEXT NOT NULL
);

-- no password by default: figure out some way to set it...
INSERT INTO users (login, email, name, password, salt)
       VALUES ('ken', 'kengruven@gmail.com', 'Ken Harris', 'XXX', 'XXX');

INSERT INTO blogs (uuid, title, subtitle, user_id)
       VALUES ('21498d42-24c0-409b-b847-98e87f017ee4',
               'Kenmudgeon',
               'All software is terrible',
               (select id from users where login = 'ken' limit 1));

INSERT INTO posts (uuid, blog_id, title, content, created, updated, published)
       VALUES ('56284cd1-f3cb-4826-966b-2e808f1786d0',
               (select id from users where login = 'ken' limit 1),
               'Greeting',
               'Hello, world!',
               CURRENT_TIMESTAMP,
               CURRENT_TIMESTAMP,
               TRUE);

INSERT INTO docs (blog_id, name, slug, content)
       VALUES ((select id from users where login = 'ken' limit 1),
               'About',
               'about',
               'This is a new blog, which has not been configured yet.');

-- NOTE: don't need a text index to search!  but it'd be nice:
--   http://www.postgresql.org/docs/8.3/static/textsearch-tables.html
-- for ranking:
--   http://www.postgresql.org/docs/8.3/static/textsearch-controls.html#TEXTSEARCH-RANKING
